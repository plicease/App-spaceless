#!/usr/bin/perl

use strict;
use warnings;
use App::spaceless;

# PODNAME: spaceless
# ABSTRACT: Convert PATH type environment variables to spaceless versions
# VERSION

=head1 SYNOPSIS

Convert PATH (by default):

 cygwin% spaceless
 PATH=/usr/bin:/cygdrive/c/PROGRA~2/NVIDIA~1/PhysX/Common:...
 export PATH

Convert another PATH style environment variable

 cygwin% spaceless PERL5LIB
 PERL5LIB=/PERL~1/lib:/PERL~2/lib
 export PERL5LIB

Update the PATH in the current shell (works with both sh and csh):

 cygwin% eval `spaceless PATH`

Same thing from C<cmd.exe> or C<command.com> prompt:

 C:\> spaceless PATH -f path.bat
 C:\> path.bat

=head1 DESCRIPTION

C<spaceless> converts PATH style environment variables on windows into equivalents
that do not have spaces.  By default it uses L<Shell::Guess> to make a reasonable
guess as to the shell you are currently using (not your login shell).  You may
alternately specify a specific shell type using one of the options below.

This may be useful if you have tools that require PATH style environment variables
not include spaces.

=head1 OPTIONS

=head2 --cmd

Generate cmd.exe configuration

=head2 --command

Generate command.com configuration

=head2 --csh

Generate c shell configuration

=head2 -f I<filename>

Write configuration to I<filename> instead of standard output

=head2 --expand | -x

Expand short paths to long paths (adding any spaces that may be back in)

=head2 --fish

Generate fish shell configuration

=head2 --help

Print help message and exit

=head2 --korn

Generate korn shell configuration

=head2 --list

Instead of generating a shell configuration, list the directories
in the given path style variable

=head2 --login

Use the your default login shell (as determined by L<Shell::Guess>)
On Unix style systems this consults the C<GECOS> field in the
C</etc/passwd> file or uses NIS.  On other platforms it may use
another means to determine your login shell, or simply make an
informed guess based on the platform.

=head2 --no-cygwin

Remove any cygwin paths.  Has no affect on non cygwin platforms.

=head2 --power

Generate Power shell configuration

=head2 --sh

Generate bourne shell configuration

=head2 --trim | -t

Trim non-existing directories.  This is a good idea since such directories can 
sometimes cause L<spaceless> to die.

=head2 --version | v

Print version number and exit

=head1 EXAMPLES

=head2 Removing spaces from the PATH on Cygwin

My motivation for writing this script was trying to get L<perlbrew> to work on Cygwin.
Since Windows frequently includes spaces in its C<%PATH%> environment variable, and
cygwin inherits them.

 xian-x86_64% source ~/perl5/perlbrew/etc/cshrc
 setenv: Too many arguments.
 xian-x86_64% eval `spaceless PATH`
 xian-x86_64% source ~/perl5/perlbrew/etc/cshrc
 xian-x86_64%

I could have manually updated my C<%PATH%> to not include spaces, or better yet submitted
a patch to L<perlbrew> to fix its spacing problem.  This probably won't be the last script
that I will have the spaces in the C<%PATH%> problem with.
 
=cut

exit App::spaceless->main(@ARGV);
